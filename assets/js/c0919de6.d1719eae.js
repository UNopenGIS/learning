"use strict";(self.webpackChunklearning_hub=self.webpackChunklearning_hub||[]).push([[284],{3236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>g,frontMatter:()=>m,metadata:()=>p,toc:()=>u});var a=n(5893),i=n(1151),o=n(7294),l=n(460),r=n.n(l),s=n(8325);n(4335);function d(){const[e,t]=(0,o.useState)("\n<html>\n<head>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet/dist/leaflet.css\" />\n    <script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"><\/script>\n</head>\n<body>\n    <div id=\"map\" style=\"height:100%\"></div>\n    <script>\n    var map = L.map('map').setView([34, -180], 2);\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n\n    var laMarker = L.marker([34.0522, -118.2437], {\n        icon: L.divIcon({\n            className: 'time-label',\n            html: 'Loading...',\n        }),\n    }).addTo(map); // Los Angeles\n    setInterval(() => {\n        var laTime = new Intl.DateTimeFormat('en-US', { timeZone: 'America/Los_Angeles', timeStyle: 'medium' }).format(new Date());\n        laMarker.setIcon(L.divIcon({\n            className: 'time-label',\n            html: '<p> \ud83c\uddfa\ud83c\uddf8 ' + laTime + '</p>',\n        }));\n    }, 1000);\n    \n    var tokyoMarker = L.marker([35.6895, 139.6917 - 360], {\n        icon: L.divIcon({\n            className: 'time-label',\n            html: 'Loading...',\n        }),\n    }).addTo(map); // Tokyo, Japan\n    setInterval(() => {\n        var tokyoTime = new Intl.DateTimeFormat('en-US', { timeZone: 'Asia/Tokyo', timeStyle: 'medium' }).format(new Date());\n        tokyoMarker.setIcon(L.divIcon({\n            className: 'time-label',\n            html: '<p>\ud83c\uddef\ud83c\uddf5 ' + tokyoTime + '</p>',\n        }));\n    }, 1000);\n<\/script>\n</body>\n</html>");return(0,o.useEffect)((()=>{const t=document.getElementById("iframe");t.contentWindow.document.open(),t.contentWindow.document.write(e),t.contentWindow.document.close()}),[e]),(0,a.jsxs)("div",{style:{border:"1px solid #ddd",borderRadius:"4px"},children:[(0,a.jsx)("h2",{style:{margin:0,padding:"10px",backgroundColor:"#f0f0f0",borderBottom:"1px solid #ddd"},children:"Live Editor"}),(0,a.jsx)(r(),{value:e,onValueChange:t,highlight:e=>(0,s.highlight)(e,s.languages.markup),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12,backgroundColor:"#f0f0f0"}}),(0,a.jsx)("iframe",{id:"iframe",style:{width:"100%",height:"500px"}})]})}const m={},c="Leaflet Live Editing test",p={id:"tutorials/leaflet/leaflet-live-editing",title:"Leaflet Live Editing test",description:"This is an example of a Leaflet map with live editing. To get this to work, you need to create a react component that renders the map, and then use the LiveHtmlEditor tag to render it.",source:"@site/docs/tutorials/leaflet/leaflet-live-editing.md",sourceDirName:"tutorials/leaflet",slug:"/tutorials/leaflet/leaflet-live-editing",permalink:"/learning/tutorials/leaflet/leaflet-live-editing",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GeoJson.io",permalink:"/learning/tutorials/geojson/"}},h={},u=[];function f(e){const t={code:"code",h1:"h1",p:"p",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"leaflet-live-editing-test",children:"Leaflet Live Editing test"}),"\n",(0,a.jsxs)(t.p,{children:["This is an example of a Leaflet map with live editing. To get this to work, you need to create a react component that renders the map, and then use the ",(0,a.jsx)(t.code,{children:"LiveHtmlEditor"})," tag to render it."]}),"\n",(0,a.jsx)(d,{})]})}function g(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}}}]);